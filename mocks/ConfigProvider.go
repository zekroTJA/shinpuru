// Code generated by mockery v2.46.1. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	models "github.com/zekroTJA/shinpuru/internal/models"
)

// ConfigProvider is an autogenerated mock type for the Provider type
type ConfigProvider struct {
	mock.Mock
}

// Config provides a mock function with given fields:
func (_m *ConfigProvider) Config() *models.Config {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Config")
	}

	var r0 *models.Config
	if rf, ok := ret.Get(0).(func() *models.Config); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Config)
		}
	}

	return r0
}

// Parse provides a mock function with given fields:
func (_m *ConfigProvider) Parse() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Parse")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewConfigProvider creates a new instance of ConfigProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewConfigProvider(t interface {
	mock.TestingT
	Cleanup(func())
}) *ConfigProvider {
	mock := &ConfigProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
