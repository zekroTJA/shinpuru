name: Releases CD

on:
  workflow_dispatch:
  push:
    tags:
      - '*'

jobs:

  frontend:
    name: Build Frontend Artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Set up NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install dependencies
        working-directory: ./web
        run: npm ci
      - name: Build Web App
        working-directory: ./web
        run: npx ng build --prod --output-path ../bin/web/dist/web
      - name: Upload Artifcats
        uses: actions/upload-artifact@v2
        with:
          name: frontend
          path: bin/
          retention-days: 1

  backend:
    name: Build Backend Artifacts
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos:
          - linux
          - windows
          - darwin
        goarch:
          - amd64
          - arm64
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: "^1.17"
      - name: Check out code
        uses: actions/checkout@v2
      - name: Get dependencies
        run: go get -v ./...
      - name: Populate info embeds
        run: bash ./ci/populateinfo.sh
      - name: Build Backend (${{ matrix.goos }}-${{ matrix.goarch }})
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: go build -o ./bin/shinpuru-${{ matrix.goos }}-${{ matrix.goarch }} ./cmd/shinpuru/main.go
      - name: Rename Windows Binary
        if: ${{ matrix.goos == 'windows' }}
        env:
          FNAME: ./bin/shinpuru-${{ matrix.goos }}-${{ matrix.goarch }}
        run: mv ${{ env.FNAME }} ${{ env.FNAME }}.exe
      - name: Upload Artifcats
        uses: actions/upload-artifact@v2
        with:
          name: backend
          path: bin/
          retention-days: 1

  deploy:
    name: Deploy to Releases
    runs-on: ubuntu-latest
    needs:
      - "frontend"
      - "backend"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Retrieve backend binaries
        uses: actions/download-artifact@v2
        with:
          name: backend
          path: bin/source/
      - name: Retrieve frontend binaries
        uses: actions/download-artifact@v2
        with:
          name: frontend
          path: bin/source/
      - name: Inject Version into Changelog
        run: |-
           sed -i "s/\[VERSION\]/$(git describe --tags --abbrev=0)/g" CHANGELOG.md
      - name: Bundle Artifacts
        working-directory: bin/source/
        run: |-
          mkdir ../final
          tar -czvf ../final/build_assets.tar.gz *
      - name: Generate Checksums
        working-directory: bin/final/
        run: |-
          md5sum * | tee ../md5sum.txt
          sha256sum * | tee ../sha256sum.txt
          mv ../md5sum.txt ./
          mv ../sha256sum.txt ./
      - name: Set up Hub
        run: |-
          sudo snap install hub --classic
      - name: Deploy to Releases
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: 'hub release create
            -a ./bin/final/build_assets.tar.gz
            -a ./bin/final/md5sum.txt
            -a ./bin/final/sha256sum.txt
            -F ./CHANGELOG.md
            $(git describe --tags --abbrev=0)'
